#!/bin/bash



connect_to_gke_mgmt() {
  
  PROJECT_ID="$1"

  gcloud compute ssh bastion-host \
    --project="$PROJECT_ID" \
    --zone=me-west1-a \
    --tunnel-through-iap \
    --no-user-output-enabled \
    -- -M -S /tmp/sslsock \
    -L 8888:localhost:8888 -N -q -f
}

check_shell() {
  parent_process=$(ps -p $$ -o comm=)
  if echo "$parent_process" | grep -q "zsh"; then
      echo "Zsh"
  elif echo "$parent_process" | grep -q "bash"; then
      echo "Bash"
  else
      echo "Unknown shell"
  fi
}

generate_aliases() {
  cat <<EOF
#### GKE-TUNNEL ALIASES ####
alias k='HTTPS_PROXY=localhost:8888 kubectl'
alias kg='HTTPS_PROXY=localhost:8888 kubectl get'
alias kd='HTTPS_PROXY=localhost:8888 kubectl describe'
alias kl='HTTPS_PROXY=localhost:8888 kubectl logs -f'
alias kubectl='HTTPS_PROXY=localhost:8888 kubectl'
alias helm='HTTPS_PROXY=localhost:8888 helm'
alias kubens='HTTPS_PROXY=localhost:8888 kubens'
#### END GKE-TUNNEL ALIASES ####
EOF
}


add_zsh_aliases() {
  parent_process=$(ps -p $$ -o comm=)
  if echo "$parent_process" | grep -q "zsh"; then
    local RC_FILE="$HOME/.zshrc"
  else
    local RC_FILE="$HOME/.bashrc"
  fi
  local ALIASES_BLOCK_START="#### GKE-TUNNEL ALIASES ####"
  local ALIASES_BLOCK_END="#### END GKE-TUNNEL ALIASES ####"

  if ! grep -q "$ALIASES_BLOCK_START" "$RC_FILE" && ! grep -q "$ALIASES_BLOCK_END" "$RC_FILE"; then
    generate_aliases >> "$RC_FILE"
  fi
}


spinner() {
  local STEPS=("${@:1:$# / 2}")
  local CMDS=("${@:$# / 2 + 1}")

  local FRAME=("⠋" "⠙" "⠹" "⠸" "⠼" "⠴" "⠦" "⠧" "⠇" "⠏")
  local FRAME_INTERVAL=0.1
  local step=0

  tput civis -- invisible

  while [ "$step" -lt "${#CMDS[@]}" ]; do
    LOG_FILE=/tmp/gke_tunnel_output.log
    ${CMDS[$step]} > $LOG_FILE 2>&1 &
    pid=$!

    while ps -p $pid &>/dev/null; do
      echo -ne "\\r[   ] ${STEPS[$step]} "

      for k in "${!FRAME[@]}"; do
        echo -ne "\\r[ ${FRAME[k]} ]"
        sleep $FRAME_INTERVAL
      done
    done
    wait $pid
    status=$?
    output=$(cat $LOG_FILE)

    if [ $status -eq 0 ]; then
        echo -ne "\\r[ ✔ ] ${STEPS[$step]}\\n"
    else
        echo -ne "\\r[ ❌ ] ${STEPS[$step]}\\n"
        echo -e "$output"
        rm -f $LOG_FILE
        exit 1
    fi

    step=$((step + 1))
  done

  tput cnorm -- normal
}


PROJECT_ID="$1"
GKE_CLUSTER="$2"

[[ ! -x "$(command -v gcloud)" ]] && printf "gcloud not found, you need to install gcloud first" && exit 1
[[ -z "$PROJECT_ID" ]] && printf "PROJECT_ID is not set" && exit 1
[[ -z "$GKE_CLUSTER" ]] && printf "GKE_CLUSTER is not set" && exit 1
nc -z 127.0.0.1 8888 && echo "Tunnel is already open!" && exit 0


STEPS=(
  "Connecting to bastion-host in project $PROJECT_ID"
  "Adding cluster $GKE_CLUSTER to kubeconfig file"
  "Setting kubectl, Helm & kubens aliases"
)

CMDS=(
  "connect_to_gke_mgmt $PROJECT_ID"
  "gcloud container clusters get-credentials $GKE_CLUSTER --region=me-west1 --project=$PROJECT_ID --no-user-output-enabled"
  "add_aliases"
)

spinner "${STEPS[@]}" "${CMDS[@]}"
echo "Aliases added. Please run 'source ~/.zshrc' or 'source ~/.bashrc' to apply the changes."